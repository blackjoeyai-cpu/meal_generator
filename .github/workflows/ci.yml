name: Flutter CI/CD

on:
  push:
    branches:
      - main
      - develop
      - '**'
  pull_request:
    branches:
      - '**'

env:
  FLUTTER_VERSION: ${{ vars.FLUTTER_VERSION }} # e.g., 3.35.3

jobs:
  tests:
    name: 🧪 Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Generate mock files
        run: dart run build_runner build --delete-conflicting-outputs
      
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .
      
      - name: Analyze code
        run: flutter analyze
      
      - name: Run unit tests
        run: flutter test --coverage --reporter expanded
      
      - name: Check test coverage
        run: |
          echo "Checking test coverage..."
          if [ -f coverage/lcov.info ]; then
            echo "Coverage file found"
          else
            echo "Warning: No coverage file generated"
          fi
      
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false
      
      - name: 📋 Write Test Summary
        if: always()
        run: |
          echo "## 🧪 Test Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "- Status: ✅ All tests passed" >> $GITHUB_STEP_SUMMARY
            echo "- Coverage: 📊 Report uploaded to Codecov" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Status: ❌ Tests failed" >> $GITHUB_STEP_SUMMARY
          fi

  build-android:
    name: 📱 Build Android APK
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Generate mock files
        run: dart run build_runner build --delete-conflicting-outputs
      
      - name: Build Android APK
        run: flutter build apk --release
      
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: ${{ vars.ARTIFACT_RETENTION_DAYS || 7 }}
      
      - name: 📋 Write Android Build Summary
        if: always()
        run: |
          echo "## 📱 Android Build Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "- Status: ✅ APK built successfully" >> $GITHUB_STEP_SUMMARY
            echo "- Output: [Download APK](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
            echo "- Retention: ⏳ ${{ vars.ARTIFACT_RETENTION_DAYS || 7 }} days" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Status: ❌ Build failed" >> $GITHUB_STEP_SUMMARY
          fi

  build-web:
    name: 🌐 Build Web App
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.pub-cache
            build
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Generate mock files
        run: dart run build_runner build --delete-conflicting-outputs
      
      - name: Build Web App
        run: flutter build web --release
      
      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web/
          retention-days: ${{ vars.ARTIFACT_RETENTION_DAYS || 7 }}
      
      - name: 📋 Write Web Build Summary
        if: always()
        run: |
          echo "## 🌐 Web Build Summary" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "- Status: ✅ Web app built successfully" >> $GITHUB_STEP_SUMMARY
            echo "- Output: [Download Web Build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
            echo "- Retention: ⏳ ${{ vars.ARTIFACT_RETENTION_DAYS || 7 }} days" >> $GITHUB_STEP_SUMMARY
          else
            echo "- Status: ❌ Build failed" >> $GITHUB_STEP_SUMMARY
          fi
